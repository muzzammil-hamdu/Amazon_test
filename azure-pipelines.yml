trigger:
- master   # run pipeline on commits to master branch

pool:
  name: batch11   # Windows self-hosted agent pool

# =====================
# Stage 1: Build
# =====================
stages:
- stage: Build
  displayName: "Build and Publish Artifact"
  jobs:
    - job: BuildJob
      displayName: "Build Job"
      steps:
        # Step 1: Checkout repo
        - checkout: self

        # Step 2: Verify Java & Maven
        - powershell: |
            Write-Host "Checking Java version..."
            java -version
            Write-Host "Checking Maven version..."
            mvn -version
          displayName: "Check Java & Maven"

        # Step 3: Run Maven build inside Amazon folder
        - powershell: |
            cd "$(Build.SourcesDirectory)\Amazon"
            Write-Host "Running Maven clean package..."
            mvn clean package -DskipTests
          displayName: "Maven Build"

        # Step 4: Copy WAR from Amazon-Web target folder
        - task: CopyFiles@2
          displayName: "Copy WAR output"
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\Amazon\Amazon-Web\target'
            Contents: '*.war'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        # Step 5: Publish artifact
        - task: PublishBuildArtifacts@1
          displayName: "Publish Artifact"
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# =====================
# Stage 2: Deploy
# =====================
- stage: Deploy
  displayName: "Deploy to Tomcat"
  dependsOn: Build
  jobs:
    - job: DeployJob
      displayName: "Deploy Job"
      steps:
        # Step 1: Download artifact from Build stage
        - download: current
          artifact: drop

        # Step 2: Deploy WAR to Tomcat
        - powershell: |
            $warFile = Get-ChildItem "$(Pipeline.Workspace)\drop" -Recurse -Include *.war | Select-Object -First 1
            if (-not $warFile) {
              Write-Error "No WAR file found in artifact!"
              exit 1
            }
            Write-Host "Deploying WAR file: $($warFile.FullName)"

            # Set Tomcat webapps path
            $tomcatPath = "C:\Users\DELL\Downloads\apache-tomcat-9.0.106-windows-x64\apache-tomcat-9.0.106\webapps"

            # Copy WAR
            Copy-Item $warFile.FullName $tomcatPath -Force
          displayName: "Deploy WAR to Tomcat"

        # Step 3: Restart Tomcat safely (service or manual)
        - powershell: |
            $serviceName = "Tomcat9"  # Replace with actual service Name
            $tomcatBinPath = "C:\Users\DELL\Downloads\apache-tomcat-9.0.106-windows-x64\apache-tomcat-9.0.106\bin"

            # Try to restart as Windows service
            $service = Get-Service -Name $serviceName -ErrorAction SilentlyContinue
            if ($service) {
                Write-Host "Found Tomcat service '$serviceName' with status: $($service.Status)"
                if ($service.Status -eq 'Running') {
                    Write-Host "Stopping service..."
                    Stop-Service -Name $serviceName -Force -ErrorAction Continue
                }
                Write-Host "Starting service..."
                Start-Service -Name $serviceName -ErrorAction Stop
                Write-Host "Tomcat service restarted successfully."
            }
            else {
                # If not running as a service, restart manually using catalina.bat
                Write-Warning "Tomcat service '$serviceName' not found. Attempting manual restart..."
                Write-Host "Stopping Tomcat manually..."
                & "$tomcatBinPath\catalina.bat" stop
                Start-Sleep -Seconds 5
                Write-Host "Starting Tomcat manually..."
                & "$tomcatBinPath\catalina.bat" start
                Write-Host "Tomcat restarted manually."
            }
          displayName: "Restart Tomcat Safely"
          continueOnError: true
