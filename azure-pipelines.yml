trigger:
- master   # run pipeline on commits to master branch

pool:
  name: batch11   # Windows self-hosted agent pool

stages:
# =====================
# Stage 1: Build
# =====================
- stage: Build
  displayName: "Build and Publish Artifact"
  jobs:
    - job: BuildJob
      displayName: "Build Job"
      steps:
        # Step 1: Checkout repo
        - checkout: self

        # Step 2: Verify Java & Maven
        - powershell: |
            java -version
            mvn -version
          displayName: "Check Java & Maven"

        # Step 3: Run Maven build inside Amazon folder
        - powershell: |
            cd $(Build.SourcesDirectory)\Amazon
            mvn clean package -DskipTests
          displayName: "Maven Build"

        # Step 4: Copy WAR from Amazon-Web target folder
        - task: CopyFiles@2
          displayName: "Copy WAR output"
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\Amazon\Amazon-Web\target'
            Contents: '*.war'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        # Step 5: Publish artifact
        - task: PublishBuildArtifacts@1
          displayName: "Publish Artifact"
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# =====================
# Stage 2: Deploy
# =====================
- stage: Deploy
  displayName: "Deploy to Tomcat"
  dependsOn: Build
  jobs:
    - job: DeployJob
      displayName: "Deploy Job"
      steps:
        # Step 1: Download artifact from Build stage
        - download: current
          artifact: drop

        # Step 2: Deploy WAR to Tomcat
        - powershell: |
            $warFile = Get-ChildItem "$(Pipeline.Workspace)\drop" -Recurse -Include *.war | Select-Object -First 1
            if (-not $warFile) {
              Write-Error "No WAR file found in artifact!"
              exit 1
            }
            Write-Host "Deploying WAR file: $($warFile.FullName)"

            $tomcatPath = "C:\Users\DELL\Downloads\apache-tomcat-9.0.106-windows-x64\apache-tomcat-9.0.106\webapps"
            Copy-Item $warFile.FullName $tomcatPath -Force
          displayName: "Deploy WAR to Tomcat"

        # Step 3: Restart Tomcat (if running as a service)
        - powershell: |
            Write-Host "Restarting Tomcat service..."
            Restart-Service -Name "Tomcat9" -Force
          displayName: "Restart Tomcat Service"
          continueOnError: true   # won't fail pipeline if service restart fails
