trigger:
- master   # build & deploy when changes are pushed to master

pool:
  name: batch11   # your self-hosted Windows agent pool

stages:
# =======================
# CI Stage (Build)
# =======================
- stage: Build
  displayName: "Build and Publish Artifact"
  jobs:
    - job: BuildJob
      displayName: "Build Job"
      steps:
        # Step 1: Checkout repo
        - checkout: self

        # Step 2: Verify Java & Maven
        - powershell: |
            java -version
            mvn -version
          displayName: "Check Java & Maven"

        # Step 3: Run Maven build inside Amazon folder
        - powershell: |
            cd $(Build.SourcesDirectory)\Amazon
            mvn clean package -DskipTests
          displayName: "Maven Build"

        # Step 4: Copy JAR/WAR files to staging
        - task: CopyFiles@2
          displayName: "Copy build outputs"
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\Amazon\target'
            Contents: '*.jar;*.war'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        # Step 5: Publish artifacts
        - task: PublishBuildArtifacts@1
          displayName: "Publish Artifacts"
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# =======================
# CD Stage (Deploy)
# =======================
- stage: Deploy
  displayName: "Deploy to Tomcat"
  dependsOn: Build
  jobs:
    - job: DeployJob
      displayName: "Deploy Job"
      steps:
        # Step 1: Download artifact from Build stage
        - task: DownloadBuildArtifacts@0
          displayName: "Download Artifact"
          inputs:
            buildType: "current"
            downloadType: "single"
            artifactName: "drop"
            downloadPath: "$(System.ArtifactsDirectory)"

        # Step 2: Copy WAR/JAR to Tomcat webapps
        - powershell: |
            Write-Host "Copying artifact to Tomcat..."
            Copy-Item "$(System.ArtifactsDirectory)\drop\*.war" "C:\Tomcat\webapps\" -Force
          displayName: "Copy to Tomcat webapps"

        # Step 3: Restart Tomcat service
        - powershell: |
            Write-Host "Restarting Tomcat service..."
            net stop Tomcat9
            net start Tomcat9
          displayName: "Restart Tomcat"
